package Main;

import java.awt.*;
import java.io.File;
import java.util.ArrayList;
//import javax.swing.*;
import javax.swing.JFileChooser;
//import javax.swing.SwingUtilities;
import javax.swing.SwingWorker;

/**
 *
 * @author Jaksa
 */
public class Main extends javax.swing.JFrame {
    
    public File Workspace;
    boolean clicked = false;
    String option = "";
    public SwingWorker worker;
    ArrayList<String> WorkboardStrings;
    
    
    /**
     * Creates new form GUI
     */
    public Main() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        WorkspaceChoose = new javax.swing.JFileChooser();
        Alert = new javax.swing.JDialog();
        Ok = new javax.swing.JButton();
        AlertText = new javax.swing.JLabel();
        ParserMenu = new javax.swing.JDialog();
        ParseStart = new javax.swing.JTextField();
        ParseEnd = new javax.swing.JTextField();
        ParseFilename = new javax.swing.JTextField();
        ParseFolder = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        gbfile = new javax.swing.JFileChooser();
        CDSfolder = new javax.swing.JFileChooser();
        OptionYes = new javax.swing.JDialog();
        B_Y = new javax.swing.JButton();
        B_N = new javax.swing.JButton();
        B_O = new javax.swing.JButton();
        B_YA = new javax.swing.JButton();
        B_NA = new javax.swing.JButton();
        B_OA = new javax.swing.JButton();
        OptionText = new javax.swing.JLabel();
        ProgressBar = new javax.swing.JDialog();
        Prog_Cancel = new javax.swing.JButton();
        Prog_Progress = new javax.swing.JProgressBar();
        Prog_InfoText = new javax.swing.JLabel();
        Prog_InfoNumber = new javax.swing.JLabel();
        Prog_BottomText = new javax.swing.JLabel();
        Prog_BottomText2 = new javax.swing.JLabel();
        AboutWin = new javax.swing.JDialog();
        AboutOk = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        ScrollView = new javax.swing.JScrollPane();
        TextViewMain = new javax.swing.JTextPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        Open = new javax.swing.JMenuItem();
        Save = new javax.swing.JMenuItem();
        Exit = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        ParserO = new javax.swing.JMenuItem();
        OptimizerO = new javax.swing.JMenuItem();
        SplitterO = new javax.swing.JMenuItem();
        CheckerO = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        About = new javax.swing.JMenuItem();

        Alert.setAlwaysOnTop(true);
        Alert.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        Alert.setMinimumSize(new java.awt.Dimension(200, 110));
        Alert.setModal(true);
        Alert.setResizable(false);
        Dimension screen = Toolkit.getDefaultToolkit().getScreenSize();
        Rectangle frame = Alert.getBounds();
        Alert.setLocation((screen.width - frame.width)/2, (screen.height - frame.height)/2);
        Alert.getContentPane().setLayout(new java.awt.GridBagLayout());

        Ok.setText("Ok");
        Ok.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        Ok.setDefaultCapable(false);
        Ok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OkActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        Alert.getContentPane().add(Ok, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 41;
        gridBagConstraints.ipady = 4;
        gridBagConstraints.insets = new java.awt.Insets(6, 4, 21, 5);
        Alert.getContentPane().add(AlertText, gridBagConstraints);

        ParserMenu.setMinimumSize(new java.awt.Dimension(397, 295));
        ParserMenu.setModal(true);
        ParserMenu.setResizable(false);
        Rectangle Pframe = ParserMenu.getBounds();
        ParserMenu.setLocation((screen.width - Pframe.width)/2, (screen.height - Pframe.height)/2);

        ParseStart.setText("start");

        ParseEnd.setText("end");

        ParseFilename.setText("filename");

        ParseFolder.setText("CDS_Folder");

        jButton1.setText("Locate");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Locate");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Ok");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ParserMenuLayout = new javax.swing.GroupLayout(ParserMenu.getContentPane());
        ParserMenu.getContentPane().setLayout(ParserMenuLayout);
        ParserMenuLayout.setHorizontalGroup(
            ParserMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ParserMenuLayout.createSequentialGroup()
                .addGroup(ParserMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ParserMenuLayout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(ParserMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(ParseFolder, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE)
                            .addComponent(ParseEnd)
                            .addComponent(ParseStart)
                            .addComponent(ParseFilename))
                        .addGap(31, 31, 31)
                        .addGroup(ParserMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1)
                            .addComponent(jButton2)))
                    .addGroup(ParserMenuLayout.createSequentialGroup()
                        .addGap(105, 105, 105)
                        .addComponent(jButton3)))
                .addContainerGap(91, Short.MAX_VALUE))
        );
        ParserMenuLayout.setVerticalGroup(
            ParserMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ParserMenuLayout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(ParserMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(ParseFilename)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ParseStart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ParseEnd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ParserMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(ParseFolder)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(45, 45, 45)
                .addComponent(jButton3)
                .addContainerGap(80, Short.MAX_VALUE))
        );

        gbfile.setCurrentDirectory(new java.io.File("C:\\Users\\Jaksa\\Desktop\\PROJECT 2011-2012\\MCKX\\bin"));

        CDSfolder.setCurrentDirectory(new java.io.File("C:\\Users\\Jaksa\\Desktop\\PROJECT 2011-2012\\Ermm\\MCKX\\build\\classes\\CDS_Regions"));
        CDSfolder.setDialogTitle("");
        CDSfolder.setFileSelectionMode(javax.swing.JFileChooser.DIRECTORIES_ONLY);

        OptionYes.setAlwaysOnTop(true);
        OptionYes.setLocationByPlatform(true);
        OptionYes.setMinimumSize(new java.awt.Dimension(380, 253));
        OptionYes.setModal(true);
        OptionYes.setResizable(false);

        B_Y.setText("Yes");
        B_Y.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_YActionPerformed(evt);
            }
        });

        B_N.setText("No");
        B_N.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_NActionPerformed(evt);
            }
        });

        B_O.setText("Overwrite");
        B_O.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_OActionPerformed(evt);
            }
        });

        B_YA.setText("Yes to all");
        B_YA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_YAActionPerformed(evt);
            }
        });

        B_NA.setText("No to all");
        B_NA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_NAActionPerformed(evt);
            }
        });

        B_OA.setText("Overwrite all");
        B_OA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                B_OAActionPerformed(evt);
            }
        });

        OptionText.setText("<html>File X exists, would you like to overwrite?</html>");

        javax.swing.GroupLayout OptionYesLayout = new javax.swing.GroupLayout(OptionYes.getContentPane());
        OptionYes.getContentPane().setLayout(OptionYesLayout);
        OptionYesLayout.setHorizontalGroup(
            OptionYesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(OptionYesLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(OptionYesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(OptionYesLayout.createSequentialGroup()
                        .addComponent(B_Y, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(B_N, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(B_O, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(OptionYesLayout.createSequentialGroup()
                        .addComponent(B_YA)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(B_NA)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(B_OA))
                    .addComponent(OptionText, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        OptionYesLayout.setVerticalGroup(
            OptionYesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(OptionYesLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(OptionText, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(OptionYesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(B_Y)
                    .addComponent(B_N)
                    .addComponent(B_O))
                .addGap(11, 11, 11)
                .addGroup(OptionYesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(B_YA)
                    .addComponent(B_NA)
                    .addComponent(B_OA))
                .addContainerGap(50, Short.MAX_VALUE))
        );

        ProgressBar.setLocationByPlatform(true);
        ProgressBar.setMaximumSize(null);
        ProgressBar.setMinimumSize(new java.awt.Dimension(290, 170));
        ProgressBar.setModal(true);
        ProgressBar.setPreferredSize(null);
        ProgressBar.getContentPane().setLayout(new java.awt.GridBagLayout());

        Prog_Cancel.setText("Cancel");
        Prog_Cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Prog_CancelActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.ipadx = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LAST_LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(3, 0, 4, 12);
        ProgressBar.getContentPane().add(Prog_Cancel, gridBagConstraints);

        Prog_Progress.setIndeterminate(true);
        Prog_Progress.setPreferredSize(new java.awt.Dimension(150, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.ipadx = 83;
        gridBagConstraints.ipady = 14;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 0, 8);
        ProgressBar.getContentPane().add(Prog_Progress, gridBagConstraints);

        Prog_InfoText.setText("Info");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(17, 8, 4, 0);
        ProgressBar.getContentPane().add(Prog_InfoText, gridBagConstraints);

        Prog_InfoNumber.setText("0");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 6, 8);
        ProgressBar.getContentPane().add(Prog_InfoNumber, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 0, 0);
        ProgressBar.getContentPane().add(Prog_BottomText, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        ProgressBar.getContentPane().add(Prog_BottomText2, gridBagConstraints);

        AboutWin.setLocationByPlatform(true);
        AboutWin.setMinimumSize(new java.awt.Dimension(400, 300));
        AboutWin.setModal(true);
        AboutWin.setResizable(false);

        AboutOk.setText("Ok");
        AboutOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AboutOkActionPerformed(evt);
            }
        });

        jLabel1.setText("<html>Mini Codon Kit eXpress Alpha version 0.0.007<br /><br />Made by Jaksa Novicic</html>");
        jLabel1.setMinimumSize(new java.awt.Dimension(217, 42));

        javax.swing.GroupLayout AboutWinLayout = new javax.swing.GroupLayout(AboutWin.getContentPane());
        AboutWin.getContentPane().setLayout(AboutWinLayout);
        AboutWinLayout.setHorizontalGroup(
            AboutWinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AboutWinLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(AboutWinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AboutWinLayout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 19, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AboutWinLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(AboutOk)))
                .addContainerGap())
        );
        AboutWinLayout.setVerticalGroup(
            AboutWinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AboutWinLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addComponent(AboutOk)
                .addContainerGap())
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("MCKX");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setFocusCycleRoot(false);

        TextViewMain.setEditable(false);
        TextViewMain.setText("Welcome to MCKX");
        ScrollView.setViewportView(TextViewMain);

        jMenu1.setText("File");
        jMenu1.addMenuListener(new javax.swing.event.MenuListener() {
            public void menuDeselected(javax.swing.event.MenuEvent evt) {
            }
            public void menuCanceled(javax.swing.event.MenuEvent evt) {
            }
            public void menuSelected(javax.swing.event.MenuEvent evt) {
                jMenu1MenuSelected(evt);
            }
        });

        Open.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        Open.setText("Open Workspace");
        Open.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OpenActionPerformed(evt);
            }
        });
        Open.addMenuKeyListener(new javax.swing.event.MenuKeyListener() {
            public void menuKeyPressed(javax.swing.event.MenuKeyEvent evt) {
                OpenMenuKeyPressed(evt);
            }
            public void menuKeyReleased(javax.swing.event.MenuKeyEvent evt) {
            }
            public void menuKeyTyped(javax.swing.event.MenuKeyEvent evt) {
            }
        });
        jMenu1.add(Open);

        Save.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        Save.setText("Save Workspace");
        Save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveActionPerformed(evt);
            }
        });
        jMenu1.add(Save);

        Exit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_MASK));
        Exit.setText("Exit");
        Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitActionPerformed(evt);
            }
        });
        jMenu1.add(Exit);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Modules");

        ParserO.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.CTRL_MASK));
        ParserO.setText("Parser");
        ParserO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ParserOActionPerformed(evt);
            }
        });
        jMenu2.add(ParserO);

        OptimizerO.setText("Optimizer");
        OptimizerO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OptimizerOActionPerformed(evt);
            }
        });
        jMenu2.add(OptimizerO);

        SplitterO.setText("Splitter");
        SplitterO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SplitterOActionPerformed(evt);
            }
        });
        jMenu2.add(SplitterO);

        CheckerO.setText("Checker");
        jMenu2.add(CheckerO);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Help");

        About.setText("About");
        About.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AboutActionPerformed(evt);
            }
        });
        jMenu3.add(About);

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ScrollView, javax.swing.GroupLayout.DEFAULT_SIZE, 634, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ScrollView, javax.swing.GroupLayout.DEFAULT_SIZE, 442, Short.MAX_VALUE)
                .addContainerGap())
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-670)/2, (screenSize.height-523)/2, 670, 523);
    }// </editor-fold>//GEN-END:initComponents

    private void jMenu1MenuSelected(javax.swing.event.MenuEvent evt) {//GEN-FIRST:event_jMenu1MenuSelected
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenu1MenuSelected

    private void OpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OpenActionPerformed
        int Opensesame = WorkspaceChoose.showOpenDialog(jMenu1);
        if (Opensesame == JFileChooser.APPROVE_OPTION) {
            Workspace = WorkspaceChoose.getSelectedFile(); // sets File variable "Workspace" to selected file.
            //This is where a real application would open the file.
            //AlertText.setText("Opening: " + file.getName());
            //System.out.println("You chose to open this file: " + Workspace.getSelectedFile().getPath() + Workspace.getSelectedFile().getName());
        } else {
            //AlertText.setText("Open command cancelled by user.");
        }
            //Alert.setVisible(true);
    }//GEN-LAST:event_OpenActionPerformed

    private void ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_ExitActionPerformed

    private void ParserOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ParserOActionPerformed
        
        ParserMenu.setVisible(true);
    }//GEN-LAST:event_ParserOActionPerformed


    private void SplitterOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SplitterOActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SplitterOActionPerformed

    private void OpenMenuKeyPressed(javax.swing.event.MenuKeyEvent evt) {//GEN-FIRST:event_OpenMenuKeyPressed
        
    }//GEN-LAST:event_OpenMenuKeyPressed

    private void SaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveActionPerformed
        int Opensesame = WorkspaceChoose.showSaveDialog(jMenu1);
        if (Opensesame == JFileChooser.APPROVE_OPTION) {
            File file = WorkspaceChoose.getSelectedFile(); // select a file to save to
            //This is where a real application would open the file.
            AlertText.setText("You saved the workspace to: " + file.getName());
            System.out.println("You saved the workspace to: " + WorkspaceChoose.getSelectedFile().getPath() + 
            WorkspaceChoose.getSelectedFile().getName());
            Alert.setVisible(true);
        }
    }//GEN-LAST:event_SaveActionPerformed

    private void OkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OkActionPerformed
        Dimension screen = Toolkit.getDefaultToolkit().getScreenSize();
        Rectangle frame = Alert.getBounds();
        Alert.setLocation((screen.width - frame.width)/2, (screen.height - frame.height)/2);
        Alert.setVisible(false); // TODO add your handling code here:
    }//GEN-LAST:event_OkActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       int Opensesame = CDSfolder.showOpenDialog(jMenu1);
        if (Opensesame == JFileChooser.APPROVE_OPTION) {
            ParseFolder.setText(CDSfolder.getSelectedFile().getPath());
            //System.out.println("You saved the workspace to: " + CDSfolder.getSelectedFile().getPath() + Workspace.getSelectedFile().getName());
            
            //LabelText.setText("Set the CDS folder to: " + CDSfolder.getSelectedFile().getPath());
            //Alert.setVisible(true);
        } // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int Opensesame = gbfile.showOpenDialog(jMenu1);
        if (Opensesame == JFileChooser.APPROVE_OPTION) {
            ParseFilename.setText( gbfile.getSelectedFile().getPath());// + gbfile.getSelectedFile().getName());
            //System.out.println("You saved the workspace to: " + CDSfolder.getSelectedFile().getPath() + Workspace.getSelectedFile().getName());
            //LabelText.setText("Selected genbank file: " + gbfile.getSelectedFile().getPath() + gbfile.getSelectedFile().getName());
            //Alert.setVisible(true);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        //String[] args = {ParseFilename.getText(),ParseStart.getText(),ParseEnd.getText(),ParseFolder.getText()};
        File gbfile=new File(ParseFilename.getText());
        //if (new File(ParseFilename.getText()).exists()){ // experiment with making it shorter, but only confusing
        if (gbfile.exists())
        {
            ParserMenu.setVisible(false); // anything else after close?
            //final Parser.gui instance = new Parser.gui();
            final Main instance = this;
            
            worker = new SwingWorker()
            {
                @Override
                public String doInBackground() 
                {
                    WorkboardStrings = Parser.Parser.run(ParseFilename.getText(), ParseStart.getText(), ParseEnd.getText(), ParseFolder.getText(), true, instance);
                    return "huh";
                }
                @Override
                protected void done() 
                {
                    try 
                    { 
                        ProgressBar.setVisible(false);
                        TextViewMain.setText(WorkboardStrings.toString());
                    } 
                    catch (Exception ignore) 
                    {
                    }
                }
            };
            //instance.prime(worker);
            worker.execute();
            setIntermediateOn();
            ProgressBar.setVisible(true);
            
            
        }
        else
        {
            AlertText.setText("That file doesn't exist.");
            Alert.setVisible(true);
            
        }
        // changing text open?
    }//GEN-LAST:event_jButton3ActionPerformed

    private void OptimizerOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OptimizerOActionPerformed
        Main instance = this;
        instance.settext("Reading CDS Blocks", "");  
        instance.setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_OptimizerOActionPerformed

    private void Prog_CancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Prog_CancelActionPerformed
        //setVisible(false);        // TODO add your handling code here:
        worker.cancel(true);
    }//GEN-LAST:event_Prog_CancelActionPerformed

    private void B_YActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_YActionPerformed
        option = "y";
        clicked = true;
        OptionYes.setVisible(false);
    }//GEN-LAST:event_B_YActionPerformed

    private void B_NActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_NActionPerformed
        option = "n";
        clicked = true;
        OptionYes.setVisible(false);
    }//GEN-LAST:event_B_NActionPerformed

    private void B_OActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_OActionPerformed
        option = "ow";
        clicked = true;
        OptionYes.setVisible(false);
    }//GEN-LAST:event_B_OActionPerformed

    private void B_YAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_YAActionPerformed
        option = "ya";
        clicked = true;
        OptionYes.setVisible(false);
    }//GEN-LAST:event_B_YAActionPerformed

    private void B_NAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_NAActionPerformed
        option = "na";
        clicked = true;
        OptionYes.setVisible(false);
    }//GEN-LAST:event_B_NAActionPerformed

    private void B_OAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_B_OAActionPerformed
        option = "owa";
        clicked = true;
        OptionYes.setVisible(false);
    }//GEN-LAST:event_B_OAActionPerformed

    private void AboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AboutActionPerformed
       AboutWin.setVisible(true);
    }//GEN-LAST:event_AboutActionPerformed

    private void AboutOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AboutOkActionPerformed
       AboutWin.setVisible(false);
    }//GEN-LAST:event_AboutOkActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new Main().setVisible(true);
            }
        });
    }
    
    //////////////////////////// Parser GUI functions //////////////////////////
    
    public void settext (String txt1, String txt2)
    {
        Prog_InfoText.setText(txt1);
        Prog_BottomText.setText(txt2);
        Prog_BottomText2.setText("");
    }
    public void setinter (int CDSdisp)
    {
        //Progress.setValue(CDSdisp);
        Prog_InfoNumber.setText("" + CDSdisp);
    }
    public void setinter2 (int readgene, int Overlapno) // was originally two ints, but so that overlap is blanked out when the second one's 
    {
        Prog_Progress.setValue(readgene);
        Prog_InfoNumber.setText(readgene + "/" + Prog_Progress.getMaximum());
        Prog_BottomText2.setText("" + Overlapno);
    }    
    
    public void setinter3 (int writegene) // was originally two ints, but so that overlap is blanked out when the second one's 
    {
        Prog_Progress.setValue(writegene);
        Prog_InfoNumber.setText(writegene + "/" + Prog_Progress.getMaximum());
    }
    public void setIntermediateOn ()
    {
        Prog_Progress.setIndeterminate(true);
        Prog_Progress.setMaximum(100);
    }
    public void setIntermediateOff (int CDSmax)
    {
        Prog_Progress.setIndeterminate(false);
        Prog_Progress.setMaximum(CDSmax);
    }
    
    
    public String optionSelect (String FolderName, String protein_id)
    {
        OptionText.setText("<html>File: " + FolderName + "/" + protein_id +".txt" + " already exists. Would you like to attempt to add to it?</html>");
        OptionYes.setVisible(true);
        while (!clicked)
        {
            try
            {
                Thread.sleep(500);
            }
            catch(Exception e)
            {
                e.printStackTrace();
            }
        }
        return option;
    }
    
    
    //////////////////////////// END Parser GUI functions //////////////////////
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem About;
    private javax.swing.JButton AboutOk;
    private javax.swing.JDialog AboutWin;
    private javax.swing.JDialog Alert;
    private javax.swing.JLabel AlertText;
    private javax.swing.JButton B_N;
    private javax.swing.JButton B_NA;
    private javax.swing.JButton B_O;
    private javax.swing.JButton B_OA;
    private javax.swing.JButton B_Y;
    private javax.swing.JButton B_YA;
    private javax.swing.JFileChooser CDSfolder;
    private javax.swing.JMenuItem CheckerO;
    private javax.swing.JMenuItem Exit;
    private javax.swing.JButton Ok;
    private javax.swing.JMenuItem Open;
    private javax.swing.JMenuItem OptimizerO;
    private javax.swing.JLabel OptionText;
    private javax.swing.JDialog OptionYes;
    private javax.swing.JTextField ParseEnd;
    private javax.swing.JTextField ParseFilename;
    private javax.swing.JTextField ParseFolder;
    private javax.swing.JTextField ParseStart;
    private javax.swing.JDialog ParserMenu;
    private javax.swing.JMenuItem ParserO;
    private javax.swing.JLabel Prog_BottomText;
    private javax.swing.JLabel Prog_BottomText2;
    private javax.swing.JButton Prog_Cancel;
    private javax.swing.JLabel Prog_InfoNumber;
    private javax.swing.JLabel Prog_InfoText;
    private javax.swing.JProgressBar Prog_Progress;
    private javax.swing.JDialog ProgressBar;
    private javax.swing.JMenuItem Save;
    private javax.swing.JScrollPane ScrollView;
    private javax.swing.JMenuItem SplitterO;
    private javax.swing.JTextPane TextViewMain;
    private javax.swing.JFileChooser WorkspaceChoose;
    private javax.swing.JFileChooser gbfile;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    // End of variables declaration//GEN-END:variables
}
